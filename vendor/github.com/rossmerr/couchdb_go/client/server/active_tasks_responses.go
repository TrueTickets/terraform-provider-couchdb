// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/rossmerr/couchdb_go/models"
)

// ActiveTasksReader is a Reader for the ActiveTasks structure.
type ActiveTasksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ActiveTasksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewActiveTasksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewActiveTasksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewActiveTasksOK creates a ActiveTasksOK with default headers values
func NewActiveTasksOK() *ActiveTasksOK {
	return &ActiveTasksOK{}
}

/* ActiveTasksOK describes a response with status code 200, with default header values.

Request completed successfully
*/
type ActiveTasksOK struct {
	Payload []*models.Task
}

func (o *ActiveTasksOK) Error() string {
	return fmt.Sprintf("[GET /_active_tasks][%d] activeTasksOK  %+v", 200, o.Payload)
}
func (o *ActiveTasksOK) GetPayload() []*models.Task {
	return o.Payload
}

func (o *ActiveTasksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewActiveTasksUnauthorized creates a ActiveTasksUnauthorized with default headers values
func NewActiveTasksUnauthorized() *ActiveTasksUnauthorized {
	return &ActiveTasksUnauthorized{}
}

/* ActiveTasksUnauthorized describes a response with status code 401, with default header values.

CouchDB Server Administrator privileges required
*/
type ActiveTasksUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *ActiveTasksUnauthorized) Error() string {
	return fmt.Sprintf("[GET /_active_tasks][%d] activeTasksUnauthorized  %+v", 401, o.Payload)
}
func (o *ActiveTasksUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ActiveTasksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
