// Code generated by go-swagger; DO NOT EDIT.

package database

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/rossmerr/couchdb_go/models"
)

// PutReader is a Reader for the Put structure.
type PutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPutCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewPutAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewPutPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutCreated creates a PutCreated with default headers values
func NewPutCreated() *PutCreated {
	return &PutCreated{}
}

/* PutCreated describes a response with status code 201, with default header values.

Database created successfully (quorum is met)
*/
type PutCreated struct {
	Payload *models.OK
}

func (o *PutCreated) Error() string {
	return fmt.Sprintf("[PUT /{db}][%d] putCreated  %+v", 201, o.Payload)
}
func (o *PutCreated) GetPayload() *models.OK {
	return o.Payload
}

func (o *PutCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OK)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAccepted creates a PutAccepted with default headers values
func NewPutAccepted() *PutAccepted {
	return &PutAccepted{}
}

/* PutAccepted describes a response with status code 202, with default header values.

Accepted (at least by one node)
*/
type PutAccepted struct {
	Payload *models.OK
}

func (o *PutAccepted) Error() string {
	return fmt.Sprintf("[PUT /{db}][%d] putAccepted  %+v", 202, o.Payload)
}
func (o *PutAccepted) GetPayload() *models.OK {
	return o.Payload
}

func (o *PutAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OK)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutBadRequest creates a PutBadRequest with default headers values
func NewPutBadRequest() *PutBadRequest {
	return &PutBadRequest{}
}

/* PutBadRequest describes a response with status code 400, with default header values.

Invalid database name
*/
type PutBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *PutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /{db}][%d] putBadRequest  %+v", 400, o.Payload)
}
func (o *PutBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUnauthorized creates a PutUnauthorized with default headers values
func NewPutUnauthorized() *PutUnauthorized {
	return &PutUnauthorized{}
}

/* PutUnauthorized describes a response with status code 401, with default header values.

CouchDB Server Administrator privileges required
*/
type PutUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *PutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /{db}][%d] putUnauthorized  %+v", 401, o.Payload)
}
func (o *PutUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPreconditionFailed creates a PutPreconditionFailed with default headers values
func NewPutPreconditionFailed() *PutPreconditionFailed {
	return &PutPreconditionFailed{}
}

/* PutPreconditionFailed describes a response with status code 412, with default header values.

Database already exists
*/
type PutPreconditionFailed struct {
	Payload *models.ErrorResponse
}

func (o *PutPreconditionFailed) Error() string {
	return fmt.Sprintf("[PUT /{db}][%d] putPreconditionFailed  %+v", 412, o.Payload)
}
func (o *PutPreconditionFailed) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PutPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
