// Code generated by go-swagger; DO NOT EDIT.

package database

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/rossmerr/couchdb_go/models"
)

// SbSecurityPutReader is a Reader for the SbSecurityPut structure.
type SbSecurityPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SbSecurityPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSbSecurityPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSbSecurityPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSbSecurityPutOK creates a SbSecurityPutOK with default headers values
func NewSbSecurityPutOK() *SbSecurityPutOK {
	return &SbSecurityPutOK{}
}

/* SbSecurityPutOK describes a response with status code 200, with default header values.

Request completed successfully
*/
type SbSecurityPutOK struct {
	Payload *models.OK
}

func (o *SbSecurityPutOK) Error() string {
	return fmt.Sprintf("[PUT /{db}/_security][%d] sbSecurityPutOK  %+v", 200, o.Payload)
}
func (o *SbSecurityPutOK) GetPayload() *models.OK {
	return o.Payload
}

func (o *SbSecurityPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OK)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSbSecurityPutUnauthorized creates a SbSecurityPutUnauthorized with default headers values
func NewSbSecurityPutUnauthorized() *SbSecurityPutUnauthorized {
	return &SbSecurityPutUnauthorized{}
}

/* SbSecurityPutUnauthorized describes a response with status code 401, with default header values.

CouchDB Server Administrator privileges required
*/
type SbSecurityPutUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *SbSecurityPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /{db}/_security][%d] sbSecurityPutUnauthorized  %+v", 401, o.Payload)
}
func (o *SbSecurityPutUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SbSecurityPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
